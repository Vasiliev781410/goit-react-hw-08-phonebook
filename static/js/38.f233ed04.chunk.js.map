{"version":3,"file":"static/js/38.f233ed04.chunk.js","mappings":"wMACA,EAA4B,6BAA5B,EAAqE,6BAArE,EAAkH,iCAAlH,EAAqK,mCAArK,EAA2N,oCAA3N,EAAkR,oCAAlR,EAAuU,kCAAvU,EAAoY,4C,6BCMvXA,EAAY,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KAC9B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAyBF,EAAAA,EAAAA,UAAS,IAAlC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA+BJ,EAAAA,EAAAA,UAAS,IAAxC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,SAACC,GACdA,EAAEC,iBACF,MAAqBD,EAAEE,OAAhBb,EAAP,EAAOA,KAAKc,EAAZ,EAAYA,MACZ,OAAQd,GACJ,IAAK,OACDC,EAAQa,GACR,MACJ,IAAK,WACDT,EAAYS,GACZ,MACJ,IAAK,QACDX,EAASW,GAKpB,EAcKC,EAAoB,WACtBC,QAAQC,IAAI,SAASnB,GAEjBU,EADS,SAATV,EACS,SAEA,YAFU,CAAEoB,SAAS,GAIrC,EAED,OACI,gBAAKC,UAAWC,EAAhB,UACI,kBAAMC,SAxBQ,SAACC,GAEnB,GADAA,EAAIV,iBACS,SAATd,EAAiB,CACjB,IAAMyB,EAAO,CAACvB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GAC3BY,QAAQC,IAAIM,GACZjB,GAASkB,EAAAA,EAAAA,IAAgBD,IACzBtB,EAAQ,GACX,MACGK,GAASmB,EAAAA,EAAAA,IAAe,CAACvB,MAAAA,EAAOE,SAAAA,KAEpCC,EAAY,IACZF,EAAS,GACZ,EAYsCgB,UAAWC,EAAeM,OAAO,GAAhE,WACI,eAAIP,UAAWC,EAAf,SAAmCvB,IACzB,SAATC,GACD,iBAAKqB,UAAWC,EAAhB,WACI,kBAAOD,UAAWC,EAAsBO,QAAQ,YAAhD,mBACA,kBACIjB,SAAUA,EACVI,MAAOd,EACPmB,UAAWC,EACXtB,KAAK,OACLE,KAAK,OACL4B,GAAG,YACHC,QAAQ,yHACRhC,MAAM,yIACNiC,UAAQ,QAGd,yBACF,iBAAKX,UAAWC,EAAhB,WACI,kBAAOD,UAAWC,EAAsBO,QAAQ,aAAhD,qBACA,kBACIjB,SAAUA,EACVI,MAAOZ,EACPiB,UAAWC,EACXtB,KAAK,QACL8B,GAAG,aACH5B,KAAK,QACL8B,UAAQ,QAGhB,iBAAKX,UAAWC,EAAhB,WACI,kBAAOD,UAAWC,EAAsBO,QAAQ,YAAhD,uBACA,kBACIjB,SAAUA,EACVI,MAAOV,EACPe,UAAWC,EACXtB,KAAK,WACLE,KAAK,WACL4B,GAAG,gBACHE,UAAQ,QAGhB,mBAASX,UAAWC,EAAoBtB,KAAK,SAA7C,SAAuDA,IAC7C,UAATA,GAAmB,mBAAQiC,QAAShB,EAAmBI,UAAWC,EAA8BtB,KAAK,SAAlF,wCAAgI,oBAAQiC,QAAShB,EAAmBI,UAAWC,EAA8BtB,KAAK,SAAlF,UAA4F,MAA5F,eAInK,C,yFCpGYkC,EAAQ,WACf,OACE,SAAC,IAAD,CAAWnC,MAAM,+BAAgCC,KAAK,SAE7D,EAED,W","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__YDFcb\",\"loginForm\":\"LoginForm_loginForm__+koOR\",\"login__header\":\"LoginForm_login__header__-U2BJ\",\"loginForm__item\":\"LoginForm_loginForm__item__ugmS+\",\"loginForm__label\":\"LoginForm_loginForm__label__23boN\",\"loginForm__input\":\"LoginForm_loginForm__input__kCn-1\",\"loginForm__btn\":\"LoginForm_loginForm__btn__WCS8y\",\"loginForm__commentSignUp\":\"LoginForm_loginForm__commentSignUp__boZgN\"};","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport css from \"./LoginForm.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signUpUserThunk, loginUserThunk } from \"../../redux/users-thunk\";\n\nexport const LoginForm = ({title, type}) => {  \n    const [name, setName] = useState(\"\"); \n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    \n    const onChange = (e)=>{\n        e.preventDefault();\n        const {name,value} = e.target;\n        switch (name) {\n            case \"name\":\n                setName(value);\n                break;\n            case \"password\":\n                setPassword(value);\n                break;\n            case \"email\":\n                setEmail(value);\n                break;\n            default:\n                break;\n        }       \n    };\n    const onSubmitLocal = (evt)=>{  \n        evt.preventDefault();            \n        if (type === \"Join\") { \n            const user = {name, email, password};  \n            console.log(user);    \n            dispatch(signUpUserThunk(user));                \n            setName(\"\");  \n        }else{          \n            dispatch(loginUserThunk({email, password, })); \n        };  \n        setPassword(\"\");    \n        setEmail(\"\");                               \n    };\n    const handleClickSignUp = ()=>{ \n        console.log('type: ',type);\n        if (type === \"Join\") { \n            navigate(\"/login\", { replace: false });\n        }else{\n            navigate(\"/register\", { replace: false });\n        }\n    } \n                          \n    return (\n        <div className={css.container}>\n            <form onSubmit={onSubmitLocal} className={css.loginForm} action=\"\">\n                <h1 className={css.login__header}>{title}</h1> \n                {type === \"Join\" ? \n                <div className={css.loginForm__item}>\n                    <label className={css.loginForm__label} htmlFor=\"inputName\">Name</label>\n                    <input \n                        onChange={onChange}\n                        value={name}\n                        className={css.loginForm__input}\n                        type=\"text\"\n                        name=\"name\"\n                        id=\"inputName\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    /> \n                </div> \n                : <></> }              \n                <div className={css.loginForm__item}>\n                    <label className={css.loginForm__label} htmlFor=\"inputPhone\">Email </label>\n                    <input\n                        onChange={onChange}\n                        value={email}\n                        className={css.loginForm__input}\n                        type=\"email\"\n                        id=\"inputEmail\"\n                        name=\"email\"                  \n                        required\n                    />\n                </div>\n                <div className={css.loginForm__item}>\n                    <label className={css.loginForm__label} htmlFor=\"inputName\">Password</label>\n                    <input \n                        onChange={onChange}\n                        value={password}\n                        className={css.loginForm__input}\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"inputPassword\" \n                        required\n                    />                \n                </div> \n                <button  className={css.loginForm__btn} type=\"submit\">{type}</button>   \n                {type === \"Login\" ? <button onClick={handleClickSignUp} className={css.loginForm__commentSignUp} type=\"button\"> Don't have account? Join</button> : <button onClick={handleClickSignUp} className={css.loginForm__commentSignUp} type=\"button\">{\"<< \"}Back </button>}                                                                                                                                                       \n            </form>\n        </div>\n    )    \n}\n\nLoginForm.propTypes = {  \n    title: PropTypes.string, \n    type: PropTypes.string,  \n};\n\n\n","import { LoginForm } from \"components/LoginForm/LoginForm.jsx\";\n\nexport const Login = () => {         \n      return (\n        <LoginForm title=\"Access to your Contact book!\"  type=\"Login\"/>\n    )    \n}\n\nexport default Login;"],"names":["LoginForm","title","type","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","navigate","useNavigate","onChange","e","preventDefault","target","value","handleClickSignUp","console","log","replace","className","css","onSubmit","evt","user","signUpUserThunk","loginUserThunk","action","htmlFor","id","pattern","required","onClick","Login"],"sourceRoot":""}