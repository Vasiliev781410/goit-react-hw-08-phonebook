{"version":3,"file":"static/js/819.ec12fa62.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","webpack://react-homework-template/./src/components/ContactBook/ContactBook.module.css?f30d","components/ContactBook/ContactBook.jsx","pages/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactForm__title\":\"ContactForm_contactForm__title__OassT\",\"contactForm__item\":\"ContactForm_contactForm__item__Y5CvV\",\"contactForm__label\":\"ContactForm_contactForm__label__LWT6p\",\"contactForm__input\":\"ContactForm_contactForm__input__k3i+4\",\"contactForm__addBtn\":\"ContactForm_contactForm__addBtn__maii+\"};","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport css from \"./ContactForm.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContactThunk } from \"../../redux/contacts-thunk\";\n\n\nexport const ContactForm = ({title}) => {\n    const [name,setName] = useState(\"\");\n    const [number,setNumber] = useState(\"\");\n    const dispatch = useDispatch();\n    const selectContacts = useSelector((state) => state.contacts.contacts.items);\n  \n    const onChange = (e)=>{\n        e.preventDefault();\n        const {name,value} = e.target;\n        switch (name) {\n            case \"name\":\n                setName(value);\n                break;\n            case \"number\":\n                setNumber(value);\n                break;\n            default:\n                break;\n        }    \n       \n    };\n    const onSubmitLocal = (evt)=>{  \n        evt.preventDefault();          \n        const newContact = {name, number,}; \n        setName(\"\");    \n        setNumber(\"\");  \n        if (selectContacts.some((contact) => contact.name.toLowerCase().trim() === name.toLowerCase().trim())) {\n            return alert(`${name} already exists`);\n          }\n        dispatch(addContactThunk(newContact));                     \n    };\n\n  \n    return (\n        <>            \n            <form onSubmit={onSubmitLocal} className={css.contactForm} action=\"\">  \n                <h1 className={css.contactForm__title}>{title}</h1>            \n                 <div className={css.contactForm__item}>\n                    <label className={css.contactForm__label} htmlFor=\"inputName\">Name</label>\n                    <input \n                        onChange={onChange}\n                        value={name}\n                        className={css.contactForm__input}\n                        type=\"text\"\n                        name=\"name\"\n                        id=\"inputName\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />                \n                </div>\n                <div className={css.contactForm__item}>\n                    <label className={css.contactForm__label} htmlFor=\"inputPhone\">Number </label>\n                    <input\n                        onChange={onChange}\n                        value={number}\n                        className={css.contactForm__input}\n                        type=\"tel\"\n                        id=\"inputPhone\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </div>\n               <button className={css.contactForm__addBtn} type=\"submit\">Add contact</button>\n            </form>\n        </>\n    )    \n}\n\nContactForm.propTypes = {  \n    title: PropTypes.string,  \n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"filter__title\":\"Filter_filter__title__R1JXX\",\"filter__label\":\"Filter_filter__label__ttfPR\",\"filter__input\":\"Filter_filter__input__toa89\"};","import css from \"./Filter.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { setFilterAction } from \"../../redux/contacts-slice\";\n\nexport const Filter = ({title})=>{\n    const dispatch = useDispatch();\n    const selectFilter = useSelector((state) => state.contacts.filter);\n    const onChange = (e)=>{\n        const {value} = e.target; \n        dispatch(setFilterAction(value));   \n    }\n    return (\n        <div className={css.filterContainer}>\n            <h2 className={css.filter__title}>{title}</h2>\n            <label className={css.filter__label} htmlFor=\"filterInput\">Find contact by name</label>\n            <input onChange={onChange} className={css.filter__input} id=\"filterInput\" type=\"text\" value={selectFilter}/>\n        </div>\n    )\n}\n\nFilter.propTypes = {  \n    title: PropTypes.string,  \n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__Z4FuP\",\"contactItem__phoneContainer\":\"ContactItem_contactItem__phoneContainer__WvhsM\",\"contactItem__phone\":\"ContactItem_contactItem__phone__Hb08e\",\"deleteContactBtn\":\"ContactItem_deleteContactBtn__TD1cW\"};","import css from \"./ContactItem.module.css\";\nimport PropTypes from 'prop-types';\nimport { useDispatch} from \"react-redux\";\nimport { deleteContactThunk, getContactsThunk } from \"../../redux/contacts-thunk\";\n\nexport const ContactItem = ({contact})=>{\n    const dispatch = useDispatch();    \n    const onDeleteContact = (e) => {\n        const {id} = e.target;\n        dispatch(deleteContactThunk(id))\n        .unwrap()\n        .then(() => dispatch(getContactsThunk()));    \n    };\n\n    return (\n    <li className={css.contactItem}>{[contact.name+\": \"]}\n        <div className={css.contactItem__phoneContainer}>\n            <span className={css.contactItem__phone}>{contact.number}</span>\n            <button className={css.deleteContactBtn} onClick={onDeleteContact} type=\"button\" id={contact.id}>Delete</button>\n        </div>\n    </li>   \n    )\n};\n\nContactItem.propTypes = {  \n    contact: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.string,}),\n  };\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import { ContactItem } from \"../ContactItem/ContactItem.jsx\";\nimport PropTypes from 'prop-types';\nimport css from \"./ContactList.module.css\";\n\nexport const ContactList = ({list})=> (\n    <ul className={css.contactList}>\n        {list.map(contact => <ContactItem key={contact.id} contact={contact}/>)}       \n    </ul>\n);\n\nContactList.propTypes = {  \n    list: PropTypes.array,  \n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"userMenu\":\"UserMenu_userMenu__Stk7D\",\"userMenu__login\":\"UserMenu_userMenu__login__fh99l\",\"userMenu__logoutBtn\":\"UserMenu_userMenu__logoutBtn__gi9gO\"};","import css from \"./UserMenu.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutUserThunk } from \"../../redux/users-thunk\";\n\nexport const UserMenu = () => {\n    //const navigate = useNavigate();\n    const selectUserEmail = useSelector((state) => state.users.user.email);\n    const dispatch = useDispatch();\n         \n    const handleClick = () => {      \n        dispatch(logoutUserThunk());            \n    };\n    return (\n        <div className={css.userMenu}>\n            <p className={css.userMenu__login}>{selectUserEmail}</p>\n            <button onClick={handleClick} className={css.userMenu__logoutBtn} type=\"button\">Logout{\" >\"}</button>\n        </div>\n    )     \n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactBook_container__5jtmx\"};","import { ContactForm } from \"../ContactForm/ContactForm.jsx\";\nimport { Filter } from \"../Filter/Filter.jsx\";\nimport { ContactList } from \"../ContactList/ContactList.jsx\";\nimport { UserMenu } from \"components/UserMenu/UserMenu.jsx\";\nimport css from \"./ContactBook.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getContactsThunk } from \"redux/contacts-thunk.js\";\n\nexport const ContactBook = () => {  \n  const selectContacts = useSelector((state) => {\n    return state.contacts.contacts.items;\n  });\n   \n  const selectFilter = useSelector((state) => state.contacts.filter);     \n  const dispatch = useDispatch(); \n  \n  useEffect(() => { \n    \n    dispatch(getContactsThunk()); \n  }, [dispatch]);\n  \n function  filterContact(){      \n    return selectContacts.filter(contact=>contact.name.toLowerCase().includes(selectFilter.toLowerCase()));      \n }\n\n  return (\n      <div className={css.container}>  \n        <UserMenu />  \n        <ContactForm title='Phonebook'/>      \n        <Filter title='Contacts'/>            \n        <ContactList list={filterContact()}/>\n      </div>\n    );\n \n};\n\n\n","import { ContactBook } from \"components/ContactBook/ContactBook.jsx\";\n\nexport const Home = () => {\n    return (\n        <ContactBook />\n    )     \n}\n\nexport default Home;"],"names":["ContactForm","title","useState","name","setName","number","setNumber","dispatch","useDispatch","selectContacts","useSelector","state","contacts","items","onChange","e","preventDefault","target","value","onSubmit","evt","newContact","some","contact","toLowerCase","trim","alert","addContactThunk","className","css","action","htmlFor","type","id","pattern","required","Filter","selectFilter","filter","setFilterAction","ContactItem","onClick","deleteContactThunk","unwrap","then","getContactsThunk","ContactList","list","map","UserMenu","selectUserEmail","users","user","email","logoutUserThunk","ContactBook","useEffect","includes","Home"],"sourceRoot":""}